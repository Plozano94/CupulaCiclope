#!/usr/bin/env python
import pika
import sys
from subprocess import call
import config as c
import threading


def send(routing,message):
    #call(["python","emitter.py", method.routing_key,body])

    if routing.count("cupula"):
        call(["python","serverEmitter.py","cupula", message])
    if routing.count("meteor"):
        call(["python","serverEmitter.py","meteor", message])


connection = pika.BlockingConnection(pika.ConnectionParameters(
        host='127.0.0.1'))
channel = connection.channel()

channel.queue_declare(queue='cupula_qeue',durable=False)
channel.queue_declare(queue='meteor_qeue')

print ' [*] Waiting for messages. To exit press CTRL+C'

def callback(ch, method, properties, body):
    #t=threading.Thread(target=send, kwargs=dict(routing=method.routing_key, message=body))
    #t.start()
    print "[X]Recibido: %s" %body


channel.basic_consume(callback,
                      queue='cupula_qeue',
                      no_ack=True)
channel.basic_consume(callback,queue='meteor_qeue',no_ack=True)



channel.start_consuming()
